dia {
  Main = Implementation+
  Implementation = ContainerImplementation | SynchronousLeafImplementation

ContainerImplementation = "implementation" name SequenceOfBoxes
SynchronousLeafImplementation 
  = "sync" name "<=" DatumList Box -- withFormals
  | "sync" name                Box -- withoutFormals

SequenceOfBoxes = NestedBox+
NestedBox = Box
NB = NestedBox
Box = "{" BoxOperation Box? "}"
BoxOperation
  = ForEvery
  | Synonym
  | FindConnectionFromMe
  | Find
  | WithLock
  | Cond
  | VarBox
  | When
  | Fetch
  | SynchronousCall

When = "when" "messages" NB?
Fetch = "fetch" "=>" Datum NB?
FindConnectionFromMe = "find" Datum "from" "me" "on" "port" Datum NB?

Cond = "cond" FirstCondClause RestCondClause*
FirstCondClause = CondClause
RestCondClause = CondClause
CondClause = "{" Predicate Box "}"

WithLock = "lock" "receivers" "of" Datum NB?

Find
  = "find" name "in" Datum "given" ParameterList "=>" name NB? -- withParams
  | "find" name "in" Datum "=>" name                       NB? -- withoutParams

VarBox = "var" name "<=" "{" DatumList "}" NB?

Synonym 
  = "synonym" name "=" "{" DatumList "}" NB? -- obj
  | "synonym" name "=" Datum NB?             -- solitary

ForEvery
  = "for" "every" "item" "in" Datum "given" ParameterList "=>" name NB? -- sugaredWithParams
  | "for" "every" name "in" Datum "given" ParameterList "=>" name NB? -- withParams
  | "for" "every" "item" "in" Datum  "=>" name NB? -- sugaredWithoutParams
  | "for" "every" name "in" Datum  "=>" name NB? -- withoutParams


SynchronousCall
  // no nesting here - Call is a Leaf, not a nested box
  = "@" Datum "<=" Datum -- params
  | "@" Datum            -- noparams


Datum
  = Datum "of" Datum -- field
  | Datum "." Datum  -- dottedField
  | kwPORT          -- port
  | kwME            -- me
  | name            -- name

Predicate
  = Datum "==" Datum -- eq
  | Datum "!=" Datum -- ne

ParameterList
  = Datum "X" ParameterList -- list
  | Datum                   -- solitary

DatumList 
  = Datum "," DatumList -- list
  | Datum               -- solitary

  separator
    = "<="
    | "=>"
    | "//"
    | "=="
    | "!="
    | "="
    | "{"
    | "}"
    | "("
    | ")"
    | "@"
    | "."
    | ","
    | eol

keyword
  = &(~namecharFirst)
          ( "implementation"
          | "receivers"
          | "messages"
          | "given"
          | "every"
          | "lock"
          | "find"
          | "from"
          | "cond"
          | "with"
          | "when"
          | "item"
          | "sync"
          | "port"
          | "for"
          | "in"
          | "on"
          | "of"
          | "me"
          | "X") 
   &(~namecharRest)

kwME = &(~namecharFirst) "me" &(~namecharRest)
kwPORT = &(~namecharFirst) "port" &(~namecharRest)

eol = "\n"

name = namecharFirst namecharRest*
namecharFirst = ~separator ~keyword ("_" | "A" .. "Z" | "a" .. "z")
namecharRest = ~separator ~keyword ("_" | "A" .. "Z" | "a" .. "z" | "0" .. "9")

space
 += comment

comment
  = "//" (~"\n" any)* "\n"  -- singleLine
  | "/*" (~"*/" any)* "*/"  -- multiLine

}
