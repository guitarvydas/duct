dia {
  Main = Implementation+
  Implementation = ContainerImplementation | SynchronousLeafImplementation

ContainerImplementation = "implementation" name SequenceOfBoxes
SynchronousLeafImplementation 
  = "sync" name "<=" DatumList Box -- withFormals
  | "sync" name                Box -- withoutFormals

SequenceOfBoxes = NestedBox+
NestedBox = Box
NB = NestedBox
Box = "{" BoxOperation Box? "}"
BoxOperation
  = ForEvery
  | Synonym
  | Find
  | WithLock
  | Cond
  | VarBox
  | SynchronousCall

Cond = "cond" FirstCondClause RestCondClause*
FirstCondClause = CondClause
RestCondClause = CondClause
CondClause = "{" Predicate Box "}"

WithLock = "lock" "receivers" "of" name NB?

Find
  = "find" name "in" Datum "given" ParameterList "=>" name NB? -- withParams
  | "find" name "in" Datum "=>" name                       NB? -- withoutParams

VarBox = "var" name "<=" "{" DatumList "}" NB?

Synonym 
  = "synonym" name "=" "{" DatumList "}" NB? -- obj
  | "synonym" name "=" Datum NB?             -- solitary

ForEvery
  = "for" "every" "item" "in" Datum "given" ParameterList "=>" name NB? -- sugaredWithParams
  | "for" "every" name "in" Datum "given" ParameterList "=>" name NB? -- withParams
  | "for" "every" "item" "in" Datum  "=>" name NB? -- sugaredWithoutParams
  | "for" "every" name "in" Datum  "=>" name NB? -- withoutParams


SynchronousCall
  // no nesting here - Call is a Leaf, not a nested box
  = "@" Datum "<=" Datum -- params
  | "@" Datum            -- noparams


Datum
  = name "of" Datum -- field
  | name "." Datum  -- dottedField
  | name            -- solitary
  | "me" "of" Datum -- meField
  | "me" "." Datum  -- meDottedField
  | "me"            -- me

Predicate
  = Datum "==" Datum -- eq
  | Datum "!=" Datum -- ne

ParameterList
  = Datum "X" ParameterList -- list
  | Datum                   -- solitary

DatumList 
  = Datum "," DatumList -- list
  | Datum               -- solitary

name = namecharFirst namecharRest*
namecharFirst = ~separator ~keyword ("_" | "A" .. "Z" | "a" .. "z")
namecharRest = ~separator ~keyword ("_" | "A" .. "Z" | "a" .. "z" | "0" .. "9")

  separator
    = "<="
    | "=>"
    | "//"
    | "=="
    | "!="
    | "="
    | "{"
    | "}"
    | "("
    | ")"
    | "@"
    | "."
    | ","
    | eol

keyword
  = ("implementation"
  | "receivers"
  | "given"
  | "every"
  | "lock"
  | "find"
  | "cond"
  | "with"
  | "item"
  | "sync"
  | "for"
  | "in"
  | "of"
  | "me"
  | "X") 
  ~namecharRest

eol = "\n"

space
 += comment

comment
  = "//" (~"\n" any)* "\n"  -- singleLine
  | "/*" (~"*/" any)* "*/"  -- multiLine

}
