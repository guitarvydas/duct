Flowchart [kfc name lb @sk rb] = [[\nfunction ${name} () {
var lambdas = {${sk}
_endoflambdas: null
};
return (function () { this.lambdas.${name} (0); });
}
]]


Skewer [ksk name lb a @la rb] = [[\n${name}: function (_label) {
if (_label === 0) {${a}${la}
} else {
this.panic (_label); 
}
}\,]]

Action [a] = [[\n${a}]]

LabelledAction [kcolon ldef @cont] = [[\nreturn ${support.formatLabelFunction (ldef)};
} else if (_label === ${support.formatIndex (ldef)}) \{${cont}
\}]]

Unless [ku n1 lref @cont]
  = [[if (!this.${n1} ()) {
return this.${support.formatLabelFunction (lref)};
} else {
${cont}
;}]]

Jump [k n @cont] = [[return this.${support.formatLabelFunction (n)} ();${cont}]]
Call [n @cont] = [[this.${n} ();${cont}]]
Send [ksend n v @cont] = [[this.send ("${n}", ${v});${cont}]]



LabelDef [n] = [[${n}]]
LabelRef [n] = [[${n}]]
Label [name kslash number] = [[${name}${kslash}${number}]]

MethodRef [n] = [[${n}]]



bracket [c] = [[${c}]]
separator [c] = [[${c}]]

name_trigger [k] = [[true]]
name_name [n] = [[${n}]]
namestring [first @rest] = [[${support.mangle (first + rest)}]]
namecharFirst [c] = [[${c}]]
namecharRest [c] = [[${c}]]

separator [sep] = [[${sep}]]

keyword [kw] = [[${kw}]]

space [c] = [[${c}]]

comment [c] = [[${c}]]

string [qb @cs qe] = [[${qb}${cs}${qe}]]
dq [c] = [[${c}]]
